{"version":3,"sources":["components/TodoCreator/TodoCreator.module.scss","components/TodoTool/TodoTool.module.scss","components/TodoList/TodoList.module.scss","components/TodoCreator/arrow.svg","components/TodoItem/close.svg","components/TodoItem/check.svg","components/Footer/Footer.module.scss","components/TodoItem/TodoItem.module.scss","components/TodoList/TodoList.js","components/TodoCreator/TodoCreator.js","components/TodoItem/TodoItem.js","components/TodoTool/TodoTool.js","containers/Todo/Todo.js","actions/index.js","constants/index.js","components/Footer/Footer.js","components/ThemeChanger/ThemeChanger.js","theme/theme.js","theme/global.js","containers/App/App.js","reducer/index.js","store/index.js","index.js"],"names":["module","exports","withTheme","children","themeName","theme","TodoListClasses","classes","TodoList","push","dark","className","join","TodoCreator","createTodo","showTodos","toggleShowTodo","arrowClasses","TodoCreator_arrow","show","onClick","src","arrow","alt","autoFocus","placeholder","TodoCreator_input","onKeyPress","e","key","target","value","index","id","text","complited","actions","itemClasses","TodoItem","first","classList","contains","TodoItem_text","toggleTodoComplite","TodoItem_completeBox","checkImg","title","TodoItem_close","deleteTodo","closeImg","total","totalNoCompleted","TodoTool","buttonClasses","TodoTool_deleteCompleted","hidden","type","name","defaultChecked","htmlFor","filterTodo","deleteComplited","document","getElementById","checked","ItemWrap","styled","div","TitleNoObjects","mapDispatchToProps","filter","connect","state","todos","todosOrder","ItemActions","ToolActions","length","map","todoId","currentItem","size","Object","keys","item","totalTodos","Footer","Button","props","themeChanger","toggleTheme","lightTheme","body","darkTheme","GlobalStyles","createGlobalStyle","Title","h1","Wrap","App","useState","localStorage","getItem","setTheme","useEffect","localTheme","setItem","initialState","newId","reducer","action","todosKeys","newTodoName","newState","idx","findIndex","slice","todoName","copyTodos","indexTodo","newTodos","todosOreder","store","createStore","reducers","composeWithDevTools","ReactDOM","render"],"mappings":"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","file":"static/js/main.da2b50ed.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"TodoCreator\":\"TodoCreator_TodoCreator__Ff5BI\",\"TodoCreator_input\":\"TodoCreator_TodoCreator_input__2uNvF\",\"TodoCreator_arrow\":\"TodoCreator_TodoCreator_arrow__240nI\",\"show\":\"TodoCreator_show__mwlta\",\"TodoCreator_counter\":\"TodoCreator_TodoCreator_counter__3u6bm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TodoTool\":\"TodoTool_TodoTool__1zs79\",\"dark\":\"TodoTool_dark__2hDK4\",\"TodoTool_deleteCompleted\":\"TodoTool_TodoTool_deleteCompleted__1VheE\",\"hidden\":\"TodoTool_hidden__1vzDp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TodoList\":\"TodoList_TodoList__3SUPI\",\"dark\":\"TodoList_dark__1Z4_2\"};","module.exports = __webpack_public_path__ + \"static/media/arrow.a6dfbed7.svg\";","module.exports = __webpack_public_path__ + \"static/media/close.cad70081.svg\";","module.exports = __webpack_public_path__ + \"static/media/check.3a5afd73.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Footer\":\"Footer_Footer__1BQ54\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TodoItem\":\"TodoItem_TodoItem__2pOiY\",\"dark\":\"TodoItem_dark__m_wPE\",\"first\":\"TodoItem_first__3NUi9\",\"complited\":\"TodoItem_complited__1HbsV\",\"TodoItem_completeBox\":\"TodoItem_TodoItem_completeBox__2qhXO\",\"TodoItem_text\":\"TodoItem_TodoItem_text__Lif0_\",\"completeBoxAnim\":\"TodoItem_completeBoxAnim__1XwWm\",\"TodoItem_close\":\"TodoItem_TodoItem_close__1B-jt\"};","import React from 'react';\r\nimport classes from './TodoList.module.scss';\r\nimport { withTheme } from 'styled-components'\r\n\r\nfunction TodoList({children, theme}) {\r\n    const { themeName } = theme;\r\n\r\n    const TodoListClasses = [\r\n        classes.TodoList,\r\n    ]\r\n\r\n    if (themeName === 'dark') {\r\n        TodoListClasses.push(classes.dark)\r\n    }\r\n    return (\r\n        <div className={TodoListClasses.join(' ')}>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withTheme(TodoList)","import React from \"react\";\r\nimport classes from \"./TodoCreator.module.scss\";\r\nimport arrow from './arrow.svg'\r\n\r\nexport default function TodoCreator({createTodo, showTodos, toggleShowTodo}) {\r\n    const arrowClasses = [\r\n        classes.TodoCreator_arrow,\r\n    ]\r\n\r\n    if (showTodos) {\r\n        arrowClasses.push(classes.show)\r\n    }\r\n\r\n    const keyPresFnc = (e) => {\r\n        if (e.key === 'Enter' && e.target.value !== '') {\r\n            createTodo(e.target.value)\r\n            e.target.value = '';\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.TodoCreator}>\r\n            <div \r\n                className={arrowClasses.join(' ')}\r\n                onClick={toggleShowTodo}\r\n            >\r\n                <img src={arrow} alt=\"arrow\"/>\r\n            </div>\r\n            <input\r\n                autoFocus\r\n                placeholder=\"Что нужно сделать?\"\r\n                className={classes.TodoCreator_input}\r\n                onKeyPress={keyPresFnc}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport classes from \"./TodoItem.module.scss\";\r\nimport closeImg from \"./close.svg\";\r\nimport checkImg from \"./check.svg\"\r\n\r\nimport { withTheme } from 'styled-components'\r\n\r\nfunction TodoItem({ index, id, text, complited, actions, theme }) {\r\n    const { themeName } = theme;\r\n    const itemClasses = [classes.TodoItem];\r\n\r\n    if (themeName === 'dark') {\r\n        itemClasses.push(classes.dark)\r\n    }\r\n     \r\n\r\n    if (complited) {\r\n        itemClasses.push(classes.complited);\r\n    }\r\n\r\n    if (index === 0) {\r\n        itemClasses.push(classes.first)\r\n    }\r\n\r\n    const onItemClickFnc = e => {\r\n        if (e.target.classList.contains(classes.TodoItem) || e.target.classList.contains(classes.TodoItem_text)) {\r\n            actions.toggleTodoComplite(id)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={itemClasses.join(\" \")} onClick={onItemClickFnc}>\r\n            <div\r\n                className={classes.TodoItem_completeBox}\r\n                onClick={()=> {actions.toggleTodoComplite(id)}}\r\n            >\r\n                {complited ? (<img src={checkImg} alt=\"check\" />) : null}\r\n            </div>\r\n            <div className={classes.TodoItem_text} title={text}>\r\n                {text}\r\n            </div>\r\n            <div className={classes.TodoItem_close} onClick={()=> {actions.deleteTodo(id)}}>\r\n                <img src={closeImg} alt=\"close\" />\r\n            </div>\r\n            {/* <div className>\r\n\r\n            </div> */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withTheme(TodoItem);","import React from 'react';\r\nimport classes from './TodoTool.module.scss'\r\n\r\nimport { withTheme } from 'styled-components'\r\n\r\nfunction TodoTool({total, totalNoCompleted, actions, theme}) {\r\n    const {themeName} = theme;\r\n    const TodoListClasses = [\r\n        classes.TodoTool,\r\n    ]\r\n\r\n    if (themeName === 'dark') {\r\n        TodoListClasses.push(classes.dark)\r\n    }\r\n\r\n    const buttonClasses = [\r\n        classes.TodoTool_deleteCompleted\r\n    ]\r\n    if (totalNoCompleted() === 0) {\r\n        buttonClasses.push(classes.hidden)\r\n    }\r\n\r\n    return (\r\n        <div className={TodoListClasses.join(' ')}>\r\n            <div>\r\n                {total === 0 ? (\r\n                    'Нет задач'\r\n                ) : (\r\n                    `Осталось ${total}`\r\n                )}\r\n            </div>\r\n            <div>\r\n                <input type=\"radio\" name=\"filter\" id=\"filterAll\" defaultChecked={true}/>\r\n                <label htmlFor=\"filterAll\" onClick={()=> {actions.filterTodo('all')}}>Все</label>\r\n                <input type=\"radio\" name=\"filter\" id=\"filterNoCompleted\" />\r\n                <label htmlFor=\"filterNoCompleted\" onClick={()=> {actions.filterTodo('noCompleted')}}>Не выполненные</label>\r\n                <input type=\"radio\" name=\"filter\" id=\"filterCompleted\" />\r\n                <label htmlFor=\"filterCompleted\" onClick={()=> {actions.filterTodo('completed')}}>Выполненные</label>\r\n            </div>\r\n            <div>\r\n                <button className={buttonClasses.join(' ')} onClick={()=> {\r\n                    actions.deleteComplited();\r\n                    document.getElementById('filterAll').checked = true;\r\n                }} \r\n                >Удалить выполненные</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withTheme(TodoTool)","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport TodoList from \"../../components/TodoList/TodoList\";\r\nimport TodoCreator from \"../../components/TodoCreator/TodoCreator\";\r\nimport TodoItem from \"../../components/TodoItem/TodoItem\";\r\nimport TodoTool from \"../../components/TodoTool/TodoTool\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nimport {\r\n    toggleTodoComplite,\r\n    createTodo,\r\n    deleteTodo,\r\n    toggleShowTodo,\r\n    deleteComplited,\r\n    filterTodo,\r\n} from \"../../actions\";\r\n\r\nconst ItemWrap = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    flex-grow: 1;\r\n    ${this}::-webkit-scrollbar {\r\n        width: 0;\r\n    }\r\n    -moz-user-select: none;\r\n    -khtml-user-select: none;\r\n    user-select: none;\r\n    overflow-y: scroll;\r\n`;\r\n\r\nconst TitleNoObjects = styled.div`\r\n    padding: 15px 0;\r\n    color: inherit;\r\n    font-size: 22px;\r\n    text-align: center;\r\n`;\r\n\r\nfunction Todo({\r\n    showTodos,\r\n    todos,\r\n    todosOrder,\r\n    toggleTodoComplite,\r\n    createTodo,\r\n    deleteTodo,\r\n    toggleShowTodo,\r\n    deleteComplited,\r\n    filterTodo,\r\n    filter,\r\n}) {\r\n    const ItemActions = { toggleTodoComplite, deleteTodo };\r\n    const ToolActions = { deleteComplited, filterTodo };\r\n\r\n    const totalTodos = () => {\r\n        let size = 0;\r\n        Object.keys(todos).map((item) =>\r\n            todos[item].complited === false ? size++ : null\r\n        );\r\n        return size;\r\n    };\r\n\r\n    const totalNoCompleted = () => {\r\n        let size = 0;\r\n        Object.keys(todos).map(item => \r\n            todos[item].complited ? size++ : null   \r\n        );\r\n        return size;\r\n    }\r\n\r\n    const renderTodoItems = () => {\r\n        return (\r\n            <ItemWrap>\r\n                {todosOrder.map((todoId, index) => {\r\n                    const currentItem = todos[todoId];\r\n                    return (\r\n                        <TodoItem\r\n                            key={index}\r\n                            index={index}\r\n                            id={currentItem.id}\r\n                            text={currentItem.text}\r\n                            complited={currentItem.complited}\r\n                            filter={filter}\r\n                            actions={ItemActions}\r\n                        />\r\n                    );\r\n                })}\r\n            </ItemWrap>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <>\r\n        <TodoList>\r\n            <TodoCreator\r\n                createTodo={createTodo}\r\n                showTodos={showTodos}\r\n                toggleShowTodo={toggleShowTodo}\r\n            />\r\n            {todosOrder.length === 0 ? <TitleNoObjects>Задач этого типа нет.</TitleNoObjects> : showTodos ? renderTodoItems() : null}\r\n            <TodoTool total={totalTodos()} totalNoCompleted={totalNoCompleted} actions={ToolActions} />\r\n        </TodoList>\r\n        </>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        showTodos: state.showTodos,\r\n        todos: state.todos,\r\n        todosOrder: state.todosOrder,\r\n        filter: state.filter\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    toggleTodoComplite,\r\n    createTodo,\r\n    deleteTodo,\r\n    toggleShowTodo,\r\n    deleteComplited,\r\n    filterTodo,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Todo);\r\n","import * as types from '../constants'\r\n\r\nexport function createTodo(text) {\r\n    return {\r\n        type: types.CREATE_TODO,\r\n        text,\r\n    }\r\n}\r\n\r\nexport function toggleTodoComplite(id) {\r\n    return {\r\n        type: types.TOGGLE_TODO_COMPLITE,\r\n        id\r\n    }\r\n}\r\n\r\nexport function deleteTodo(id) {\r\n    return {\r\n        type: types.DELETE_TODO,\r\n        id\r\n    }\r\n}\r\n\r\nexport function toggleShowTodo() {\r\n    return {\r\n        type: types.TOGGLE_TODO_SHOW,\r\n    }\r\n}\r\n\r\nexport function deleteComplited() {\r\n    return {\r\n        type: types.DELETE_COMPLETED,\r\n    }\r\n}\r\n\r\n// * FILTERS\r\n\r\nexport function filterTodo(filter) {\r\n    return {\r\n        type: types.FILTER_TODO,\r\n        filter,\r\n    }\r\n}","export const CREATE_TODO = 'CREATE_TODO';\r\nexport const TOGGLE_TODO_COMPLITE = 'TOGGLE_TODO_COMPLITE';\r\nexport const DELETE_TODO = 'DELETE_TODO';\r\nexport const TOGGLE_TODO_SHOW = 'TOGGLE_TODO_SHOW';\r\n\r\nexport const DELETE_COMPLETED = 'DELETE_COMPLETED';\r\n\r\nexport const FILTER_TODO = 'FILTER_TODO';\r\n","import React from 'react';\r\nimport classes from './Footer.module.scss'\r\n\r\nexport default function() {\r\n    return (\r\n        <div className={classes.Footer}>\r\n            <span>© Danil Samarkin - 2020</span>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport styled, { withTheme } from \"styled-components\";\r\n\r\nconst Button = styled.div`\r\n    position: absolute;\r\n    right: 25px;\r\n    top: 25px;\r\n    height: 25px;\r\n    width: 25px;\r\n    border-radius: 50%;\r\n    background: ${(props) => props.theme.themeChanger};\r\n`;\r\n\r\nconst ThemeChanger = ({ theme, toggleTheme }) => (\r\n    <Button theme={theme} onClick={toggleTheme}></Button>\r\n);\r\n\r\nexport default withTheme(ThemeChanger);\r\n","export const lightTheme = {\r\n    themeName: 'light',\r\n    body: '#ffffff',\r\n    text: 'rgba(0,0,0,.5)',\r\n    title: '#ffcccc',\r\n    themeChanger: '#222226'\r\n}\r\nexport const darkTheme = {\r\n    themeName: 'dark',\r\n    body: '#222226',\r\n    text: '#fff',\r\n    title: '#fff',\r\n    themeChanger: '#ffffff'\r\n}","import { createGlobalStyle } from 'styled-components';\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n    *,\r\n    *::after,\r\n    *::before {\r\n        box-sizing: border-box;\r\n    }\r\n    body {\r\n        background: ${({ theme }) => theme.body};\r\n        color: ${({ theme }) => theme.text};\r\n        margin: 0; \r\n        padding: 0; \r\n        font-family: 'Arial', sans-serif;\r\n        transition: all 0.25s linear;\r\n      }\r\n`;","import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Todo from \"../Todo/Todo\";\r\nimport Footer from \"../../components/Footer/Footer\";\r\nimport ThemeChanger from \"../../components/ThemeChanger/ThemeChanger\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { lightTheme, darkTheme } from \"../../theme/theme\";\r\nimport { GlobalStyles } from \"../../theme/global\";\r\n\r\nconst Title = styled.h1`\r\n    margin: 0;\r\n    text-align: center;\r\n    font-size: 90px;\r\n    color: ${({ theme }) => theme.title};\r\n    font-weight: 400;\r\n    margin-bottom: 30px;\r\n`;\r\n\r\nconst Wrap = styled.div`\r\n    padding-top: 150px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n`;\r\n\r\nfunction App() {\r\n    const [theme, setTheme] = useState(\r\n        localStorage.getItem(\"theme\") || \"light\"\r\n    );\r\n\r\n    useEffect(() => {\r\n        const localTheme = localStorage.getItem(\"theme\");\r\n        if (localTheme === \"dark\") {\r\n            localTheme && setTheme(\"dark\");\r\n        } else {\r\n            localTheme && setTheme(\"light\");\r\n        }\r\n    }, []);\r\n\r\n    const toggleTheme = () => {\r\n        if (theme === \"light\") {\r\n            localStorage.setItem(\"theme\", \"dark\");\r\n            setTheme(\"dark\");\r\n        } else {\r\n            localStorage.setItem(\"theme\", \"light\");\r\n            setTheme(\"light\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <ThemeProvider theme={theme === \"dark\" ? darkTheme : lightTheme}>\r\n            <GlobalStyles />\r\n            <Wrap>\r\n                <ThemeChanger toggleTheme={toggleTheme} />\r\n                <Title>todo app</Title>\r\n                <Todo />\r\n                <Footer />\r\n            </Wrap>\r\n        </ThemeProvider>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import * as types from '../constants'\r\n\r\nconst initialState = {\r\n    theme: 'light',\r\n    showTodos: true,\r\n    newId: 1,\r\n    todos: {},\r\n    todosOrder: [],\r\n    filter: 'all',\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    const todosKeys = Object.keys(state.todos)\r\n\r\n    switch (action.type) {\r\n\r\n        case types.CREATE_TODO: {\r\n            const newTodoName = `todo-${state.newId}`;\r\n            const {text} = action;\r\n            const newState = {\r\n                ...state,\r\n                newId: state.newId + 1,\r\n                todos: {\r\n                    ...state.todos,\r\n                    [newTodoName]: {\r\n                        id: state.newId,\r\n                        text,\r\n                        complited: false,\r\n                    }\r\n                },\r\n            }\r\n            if (state.filter === 'all' || state.filter === 'noCompleted') {\r\n                return {\r\n                    ...newState,\r\n                    todosOrder: [\r\n                        ...state.todosOrder,\r\n                        newTodoName,\r\n                    ],\r\n                }\r\n            } else {\r\n                return {\r\n                    ...newState\r\n                }\r\n            }\r\n        }\r\n\r\n        case types.TOGGLE_TODO_COMPLITE: {\r\n            const currentItem = `todo-${action.id}`;\r\n            const idx = state.todosOrder.findIndex(item => item === currentItem);\r\n            const newState = {\r\n                ...state,\r\n                    todos: {\r\n                        ...state.todos,\r\n                            [currentItem]: {\r\n                                ...state.todos[currentItem],\r\n                                complited: !state.todos[currentItem].complited \r\n                            }\r\n                    },\r\n            }\r\n            if (state.filter === 'all') {\r\n                return {\r\n                    ...newState,\r\n                }\r\n            } else { \r\n                return {\r\n                    ...newState,\r\n                    todosOrder: [\r\n                        ...state.todosOrder.slice(0, idx),\r\n                        ...state.todosOrder.slice(idx + 1),\r\n                    ]\r\n                }\r\n            }\r\n        }\r\n\r\n        case types.DELETE_TODO: {\r\n            const todoName = `todo-${action.id}`\r\n            const copyTodos = state.todos;\r\n            const indexTodo = state.todosOrder.findIndex(item => item === todoName)\r\n            delete copyTodos[todoName]\r\n\r\n            return {\r\n                ...state,\r\n                todos: {\r\n                    ...copyTodos,\r\n                },\r\n                todosOrder: [\r\n                    ...state.todosOrder.slice(0, indexTodo),\r\n                    ...state.todosOrder.slice(indexTodo + 1),\r\n                ]\r\n            }\r\n        }\r\n\r\n        case types.TOGGLE_TODO_SHOW: {\r\n            return {\r\n                ...state,\r\n                showTodos: !state.showTodos,\r\n            }\r\n        }\r\n\r\n        case types.DELETE_COMPLETED: {\r\n            const newTodos = state.todos;\r\n            todosKeys.filter(item => state.todos[item].complited === true).map(item => delete newTodos[item]);\r\n            \r\n            return {\r\n                ...state,\r\n                todos: newTodos,\r\n                todosOrder: Object.keys(newTodos),\r\n                filter: 'all',\r\n            }\r\n        }\r\n\r\n        case types.FILTER_TODO: {\r\n            switch (action.filter) {\r\n                case 'all': {\r\n                    return {\r\n                        ...state,\r\n                        todosOrder: todosKeys,\r\n                        filter: 'all',\r\n                    }\r\n                    /* falls through */\r\n                }\r\n                case 'completed': {\r\n                    return {\r\n                        ...state,\r\n                        todosOrder: todosKeys.filter(item => state.todos[item].complited === true),\r\n                        filter: 'completed'\r\n                    }\r\n                    /* falls through */\r\n                }\r\n                case 'noCompleted': {\r\n                    return {\r\n                        ...state,\r\n                        todosOrder: todosKeys.filter(item => state.todos[item].complited === false),\r\n                        filter: 'noCompleted'\r\n                    }\r\n                    /* falls through */\r\n                }\r\n                default: {\r\n                    return {\r\n                        ...state,\r\n                        todosOreder: state.todosOrder\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default reducer","import { createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport reducers from '../reducer'\r\n\r\nconst store = createStore(reducers, composeWithDevTools());\r\n\r\nexport default store;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./containers/App/App\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}