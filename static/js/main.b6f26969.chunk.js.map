{"version":3,"sources":["components/TodoCreator/TodoCreator.module.scss","components/TodoTool/TodoTool.module.scss","components/TodoList/TodoList.module.scss","components/TodoCreator/arrow.svg","components/TodoItem/TodoItem.module.scss","components/TodoItem/close.svg","components/TodoItem/check.svg","components/Footer/Footer.module.scss","components/TodoList/TodoList.js","components/TodoCreator/TodoCreator.js","components/TodoItem/TodoItem.js","components/TodoTool/TodoTool.js","containers/Todo/Todo.js","actions/index.js","constants/index.js","components/Footer/Footer.js","containers/App/App.js","reducer/index.js","store/index.js","index.js"],"names":["module","exports","TodoList","children","className","classes","TodoCreator","createTodo","showTodos","toggleShowTodo","arrowClasses","TodoCreator_arrow","push","show","join","onClick","src","arrow","alt","autoFocus","placeholder","TodoCreator_input","onKeyPress","e","key","target","value","TodoItem","index","id","text","complited","actions","itemClasses","first","classList","contains","TodoItem_text","toggleTodoComplite","TodoItem_completeBox","checkImg","title","TodoItem_close","deleteTodo","closeImg","TodoTool","total","totalNoCompleted","buttonClasses","TodoTool_deleteCompleted","hidden","type","name","defaultChecked","htmlFor","filterTodo","deleteComplited","document","getElementById","checked","ItemWrap","styled","div","TitleNoObjects","mapDispatchToProps","filter","connect","state","todos","todosOrder","ItemActions","ToolActions","length","map","todoId","arr","currentItem","size","Object","keys","item","totalTodos","Footer","Title","h1","Wrap","App","initialState","newId","reducer","action","todosKeys","newTodoName","newState","idx","findIndex","slice","todoName","copyTodos","indexTodo","newTodos","todosOreder","store","createStore","reducers","composeWithDevTools","ReactDOM","render"],"mappings":"kFACAA,EAAOC,QAAU,CAAC,YAAc,iCAAiC,kBAAoB,uCAAuC,kBAAoB,uCAAuC,KAAO,0BAA0B,oBAAsB,2C,mBCA9OD,EAAOC,QAAU,CAAC,SAAW,2BAA2B,yBAA2B,2CAA2C,OAAS,2B,mBCAvID,EAAOC,QAAU,CAAC,SAAW,6B,mBCD7BD,EAAOC,QAAU,IAA0B,mC,kBCC3CD,EAAOC,QAAU,CAAC,SAAW,2BAA2B,MAAQ,wBAAwB,UAAY,4BAA4B,qBAAuB,uCAAuC,cAAgB,gCAAgC,gBAAkB,kCAAkC,eAAiB,mC,mBCDnTD,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,mBCC3CD,EAAOC,QAAU,CAAC,OAAS,yB,uJCGZ,SAASC,EAAT,GAA+B,IAAZC,EAAW,EAAXA,SAC9B,OACI,yBAAKC,UAAWC,IAAQH,UACnBC,G,sCCHE,SAASG,EAAT,GAA+D,IAAzCC,EAAwC,EAAxCA,WAAYC,EAA4B,EAA5BA,UAAWC,EAAiB,EAAjBA,eAClDC,EAAe,CACjBL,IAAQM,mBAGRH,GACAE,EAAaE,KAAKP,IAAQQ,MAU9B,OACI,yBAAKT,UAAWC,IAAQC,aACpB,yBACIF,UAAWM,EAAaI,KAAK,KAC7BC,QAASN,GAET,yBAAKO,IAAKC,IAAOC,IAAI,WAEzB,2BACIC,WAAS,EACTC,YAAY,gGACZhB,UAAWC,IAAQgB,kBACnBC,WAnBO,SAACC,GACF,UAAVA,EAAEC,KAAsC,KAAnBD,EAAEE,OAAOC,QAC9BnB,EAAWgB,EAAEE,OAAOC,OACpBH,EAAEE,OAAOC,MAAQ,Q,sDCXd,SAASC,EAAT,GAA4D,IAAxCC,EAAuC,EAAvCA,MAAOC,EAAgC,EAAhCA,GAAIC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,UAAWC,EAAW,EAAXA,QACrDC,EAAc,CAAC5B,IAAQsB,UAEzBI,GACAE,EAAYrB,KAAKP,IAAQ0B,WAGf,IAAVH,GACAK,EAAYrB,KAAKP,IAAQ6B,OAS7B,OACI,yBAAK9B,UAAW6B,EAAYnB,KAAK,KAAMC,QAPpB,SAAAQ,IACfA,EAAEE,OAAOU,UAAUC,SAAS/B,IAAQsB,WAAaJ,EAAEE,OAAOU,UAAUC,SAAS/B,IAAQgC,iBACrFL,EAAQM,mBAAmBT,KAM3B,yBACIzB,UAAWC,IAAQkC,qBACnBxB,QAAS,WAAMiB,EAAQM,mBAAmBT,KAEzCE,EAAa,yBAAKf,IAAKwB,IAAUtB,IAAI,UAAc,MAExD,yBAAKd,UAAWC,IAAQgC,cAAeI,MAAOX,GACzCA,GAEL,yBAAK1B,UAAWC,IAAQqC,eAAgB3B,QAAS,WAAMiB,EAAQW,WAAWd,KACtE,yBAAKb,IAAK4B,IAAU1B,IAAI,Y,qBC/BzB,SAAS2B,EAAT,GAAuD,IAApCC,EAAmC,EAAnCA,MAAOC,EAA4B,EAA5BA,iBAAkBf,EAAU,EAAVA,QACjDgB,EAAgB,CAClB3C,IAAQ4C,0BAMZ,OAJ2B,IAAvBF,KACAC,EAAcpC,KAAKP,IAAQ6C,QAI3B,yBAAK9C,UAAWC,IAAQwC,UACpB,6BACe,IAAVC,EACG,oDADH,2DAGeA,IAGpB,6BACI,2BAAOK,KAAK,QAAQC,KAAK,SAASvB,GAAG,YAAYwB,gBAAgB,IACjE,2BAAOC,QAAQ,YAAYvC,QAAS,WAAMiB,EAAQuB,WAAW,SAA7D,sBACA,2BAAOJ,KAAK,QAAQC,KAAK,SAASvB,GAAG,sBACrC,2BAAOyB,QAAQ,oBAAoBvC,QAAS,WAAMiB,EAAQuB,WAAW,iBAArE,mFACA,2BAAOJ,KAAK,QAAQC,KAAK,SAASvB,GAAG,oBACrC,2BAAOyB,QAAQ,kBAAkBvC,QAAS,WAAMiB,EAAQuB,WAAW,eAAnE,uEAEJ,6BACI,4BAAQnD,UAAW4C,EAAclC,KAAK,KAAMC,QAAS,WACjDiB,EAAQwB,kBACRC,SAASC,eAAe,aAAaC,SAAU,IAFnD,mH,0dCVhB,IAAMC,EAAWC,IAAOC,IAAV,SAIR,GASAC,EAAiBF,IAAOC,IAAV,KA0EpB,IASME,EAAqB,CACvB1B,mBC3GG,SAA4BT,GAC/B,MAAO,CACHsB,KCV4B,uBDW5BtB,ODyGJtB,WCnHG,SAAoBuB,GACvB,MAAO,CACHqB,KCJmB,cDKnBrB,SDiHJa,WCtGG,SAAoBd,GACvB,MAAO,CACHsB,KChBmB,cDiBnBtB,ODoGJpB,eChGG,WACH,MAAO,CACH0C,KCtBwB,qBFqH5BK,gBC3FG,WACH,MAAO,CACHL,KC1BwB,qBFoH5BI,WCpFG,SAAoBU,GACvB,MAAO,CACHd,KChCmB,cDiCnBc,YDoFOC,eAlBS,SAACC,GACrB,MAAO,CACH3D,UAAW2D,EAAM3D,UACjB4D,MAAOD,EAAMC,MACbC,WAAYF,EAAME,WAClBJ,OAAQE,EAAMF,UAakBD,EAAzBE,EArFf,YAWI,IAVA1D,EAUD,EAVCA,UACA4D,EASD,EATCA,MACAC,EAQD,EARCA,WACA/B,EAOD,EAPCA,mBACA/B,EAMD,EANCA,WACAoC,EAKD,EALCA,WACAlC,EAID,EAJCA,eACA+C,EAGD,EAHCA,gBACAD,EAED,EAFCA,WACAU,EACD,EADCA,OAEMK,EAAc,CAAEhC,qBAAoBK,cACpC4B,EAAc,CAAEf,kBAAiBD,cAuCvC,OACI,oCACA,kBAACrD,EAAD,KACI,kBAACI,EAAD,CACIC,WAAYA,EACZC,UAAWA,EACXC,eAAgBA,IAEG,IAAtB4D,EAAWG,OAAe,kBAACT,EAAD,mHAAyDvD,EA3BpF,kBAACoD,EAAD,KACKS,EAAWI,KAAI,SAACC,EAAQ9C,EAAO+C,GAC5B,IAAMC,EAAcR,EAAMM,GAC1B,OACI,kBAAC/C,EAAD,CACIH,IAAKI,EACLA,MAAOA,EACPC,GAAI+C,EAAY/C,GAChBC,KAAM8C,EAAY9C,KAClBC,UAAW6C,EAAY7C,UACvBkC,OAAQA,EACRjC,QAASsC,QAgB2F,KACpH,kBAACzB,EAAD,CAAUC,MA9CC,WACf,IAAI+B,EAAO,EAIX,OAHAC,OAAOC,KAAKX,GAAOK,KAAI,SAACO,GAAD,OACO,IAA1BZ,EAAMY,GAAMjD,UAAsB8C,IAAS,QAExCA,EAyCcI,GAAclC,iBAtCd,WACrB,IAAI8B,EAAO,EAIX,OAHAC,OAAOC,KAAKX,GAAOK,KAAI,SAAAO,GAAI,OACvBZ,EAAMY,GAAMjD,UAAY8C,IAAS,QAE9BA,GAiCgE7C,QAASuC,S,iBGjGzE,aACX,OACI,yBAAKnE,UAAWC,IAAQ6E,QACpB,8D,mWCDZ,IAAMC,EAAQtB,IAAOuB,GAAV,KASLC,EAAOxB,IAAOC,IAAV,KAiBKwB,MAVf,WACE,OACE,kBAACD,EAAD,KACE,kBAACF,EAAD,iBACA,kBAAC,EAAD,MACA,kBAACD,EAAD,Q,oCCxBAK,EAAe,CACjB/E,WAAW,EACXgF,MAAO,EACPpB,MAAO,GACPC,WAAY,GACZJ,OAAQ,OAgJGwB,EA7IC,WAAmC,IAAlCtB,EAAiC,uDAAzBoB,EAAcG,EAAW,uCACxCC,EAAYb,OAAOC,KAAKZ,EAAMC,OAEpC,OAAQsB,EAAOvC,MAEX,IHfmB,cGgBf,IAAMyC,EAAW,eAAWzB,EAAMqB,OAC3B1D,EAAQ4D,EAAR5D,KACD+D,EAAQ,2BACP1B,GADO,IAEVqB,MAAOrB,EAAMqB,MAAQ,EACrBpB,MAAM,2BACCD,EAAMC,OADR,kBAEAwB,EAAc,CACX/D,GAAIsC,EAAMqB,MACV1D,OACAC,WAAW,OAIvB,MAAqB,QAAjBoC,EAAMF,QAAqC,gBAAjBE,EAAMF,OACzB,2BACA4B,GADP,IAEIxB,WAAW,GAAD,mBACHF,EAAME,YADH,CAENuB,MAID,eACAC,GAKf,IH5C4B,uBG6CxB,IAAMjB,EAAW,eAAWc,EAAO7D,IAC7BiE,EAAM3B,EAAME,WAAW0B,WAAU,SAAAf,GAAI,OAAIA,IAASJ,KAClDiB,EAAQ,2BACP1B,GADO,IAENC,MAAM,2BACCD,EAAMC,OADR,kBAEIQ,EAFJ,2BAGUT,EAAMC,MAAMQ,IAHtB,IAIO7C,WAAYoC,EAAMC,MAAMQ,GAAa7C,gBAIzD,MAAqB,QAAjBoC,EAAMF,OACC,eACA4B,GAGA,2BACAA,GADP,IAEIxB,WAAW,GAAD,mBACHF,EAAME,WAAW2B,MAAM,EAAGF,IADvB,YAEH3B,EAAME,WAAW2B,MAAMF,EAAM,OAMhD,IHvEmB,cGwEf,IAAMG,EAAQ,eAAWP,EAAO7D,IAC1BqE,EAAY/B,EAAMC,MAClB+B,EAAYhC,EAAME,WAAW0B,WAAU,SAAAf,GAAI,OAAIA,IAASiB,KAG9D,cAFOC,EAAUD,GAEV,2BACA9B,GADP,IAEIC,MAAM,eACC8B,GAEP7B,WAAW,GAAD,mBACHF,EAAME,WAAW2B,MAAM,EAAGG,IADvB,YAEHhC,EAAME,WAAW2B,MAAMG,EAAY,OAKlD,IHxFwB,mBGyFpB,OAAO,2BACAhC,GADP,IAEI3D,WAAY2D,EAAM3D,YAI1B,IH7FwB,mBG8FpB,IAAM4F,EAAWjC,EAAMC,MAGvB,OAFAuB,EAAU1B,QAAO,SAAAe,GAAI,OAAoC,IAAhCb,EAAMC,MAAMY,GAAMjD,aAAoB0C,KAAI,SAAAO,GAAI,cAAWoB,EAASpB,MAEpF,2BACAb,GADP,IAEIC,MAAOgC,EACP/B,WAAYS,OAAOC,KAAKqB,GACxBnC,OAAQ,QAIhB,IHvGmB,cGwGf,OAAQyB,EAAOzB,QACX,IAAK,MACD,OAAO,2BACAE,GADP,IAEIE,WAAYsB,EACZ1B,OAAQ,QAIhB,IAAK,YACD,OAAO,2BACAE,GADP,IAEIE,WAAYsB,EAAU1B,QAAO,SAAAe,GAAI,OAAoC,IAAhCb,EAAMC,MAAMY,GAAMjD,aACvDkC,OAAQ,cAIhB,IAAK,cACD,OAAO,2BACAE,GADP,IAEIE,WAAYsB,EAAU1B,QAAO,SAAAe,GAAI,OAAoC,IAAhCb,EAAMC,MAAMY,GAAMjD,aACvDkC,OAAQ,gBAIhB,QACI,OAAO,2BACAE,GADP,IAEIkC,YAAalC,EAAME,aAKnC,QACI,OAAOF,IC3IJmC,EAFDC,sBAAYC,EAAUC,iCCEpCC,IAASC,OACP,kBAAC,IAAD,CAAUL,MAAOA,GACf,kBAAC,EAAD,OAEF7C,SAASC,eAAe,W","file":"static/js/main.b6f26969.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"TodoCreator\":\"TodoCreator_TodoCreator__Ff5BI\",\"TodoCreator_input\":\"TodoCreator_TodoCreator_input__2uNvF\",\"TodoCreator_arrow\":\"TodoCreator_TodoCreator_arrow__240nI\",\"show\":\"TodoCreator_show__mwlta\",\"TodoCreator_counter\":\"TodoCreator_TodoCreator_counter__3u6bm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TodoTool\":\"TodoTool_TodoTool__1zs79\",\"TodoTool_deleteCompleted\":\"TodoTool_TodoTool_deleteCompleted__1VheE\",\"hidden\":\"TodoTool_hidden__1vzDp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TodoList\":\"TodoList_TodoList__3SUPI\"};","module.exports = __webpack_public_path__ + \"static/media/arrow.a6dfbed7.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TodoItem\":\"TodoItem_TodoItem__2pOiY\",\"first\":\"TodoItem_first__3NUi9\",\"complited\":\"TodoItem_complited__1HbsV\",\"TodoItem_completeBox\":\"TodoItem_TodoItem_completeBox__2qhXO\",\"TodoItem_text\":\"TodoItem_TodoItem_text__Lif0_\",\"completeBoxAnim\":\"TodoItem_completeBoxAnim__1XwWm\",\"TodoItem_close\":\"TodoItem_TodoItem_close__1B-jt\"};","module.exports = __webpack_public_path__ + \"static/media/close.cad70081.svg\";","module.exports = __webpack_public_path__ + \"static/media/check.3a5afd73.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Footer\":\"Footer_Footer__1BQ54\"};","import React from 'react';\r\nimport classes from './TodoList.module.scss';\r\n\r\n\r\nexport default function TodoList({children}) {\r\n    return (\r\n        <div className={classes.TodoList}>\r\n            {children}\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport classes from \"./TodoCreator.module.scss\";\r\nimport arrow from './arrow.svg'\r\n\r\nexport default function TodoCreator({createTodo, showTodos, toggleShowTodo}) {\r\n    const arrowClasses = [\r\n        classes.TodoCreator_arrow,\r\n    ]\r\n\r\n    if (showTodos) {\r\n        arrowClasses.push(classes.show)\r\n    }\r\n\r\n    const keyPresFnc = (e) => {\r\n        if (e.key === 'Enter' && e.target.value !== '') {\r\n            createTodo(e.target.value)\r\n            e.target.value = '';\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.TodoCreator}>\r\n            <div \r\n                className={arrowClasses.join(' ')}\r\n                onClick={toggleShowTodo}\r\n            >\r\n                <img src={arrow} alt=\"arrow\"/>\r\n            </div>\r\n            <input\r\n                autoFocus\r\n                placeholder=\"Что нужно сделать?\"\r\n                className={classes.TodoCreator_input}\r\n                onKeyPress={keyPresFnc}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport classes from \"./TodoItem.module.scss\";\r\nimport closeImg from \"./close.svg\";\r\nimport checkImg from \"./check.svg\"\r\n\r\nexport default function TodoItem({ index, id, text, complited, actions }) {\r\n    const itemClasses = [classes.TodoItem];\r\n\r\n    if (complited) {\r\n        itemClasses.push(classes.complited);\r\n    }\r\n\r\n    if (index === 0) {\r\n        itemClasses.push(classes.first)\r\n    }\r\n\r\n    const onItemClickFnc = e => {\r\n        if (e.target.classList.contains(classes.TodoItem) || e.target.classList.contains(classes.TodoItem_text)) {\r\n            actions.toggleTodoComplite(id)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={itemClasses.join(\" \")} onClick={onItemClickFnc}>\r\n            <div\r\n                className={classes.TodoItem_completeBox}\r\n                onClick={()=> {actions.toggleTodoComplite(id)}}\r\n            >\r\n                {complited ? (<img src={checkImg} alt=\"check\" />) : null}\r\n            </div>\r\n            <div className={classes.TodoItem_text} title={text}>\r\n                {text}\r\n            </div>\r\n            <div className={classes.TodoItem_close} onClick={()=> {actions.deleteTodo(id)}}>\r\n                <img src={closeImg} alt=\"close\" />\r\n            </div>\r\n            {/* <div className>\r\n\r\n            </div> */}\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport classes from './TodoTool.module.scss'\r\n\r\nexport default function TodoTool({total, totalNoCompleted, actions}) {\r\n    const buttonClasses = [\r\n        classes.TodoTool_deleteCompleted\r\n    ]\r\n    if (totalNoCompleted() === 0) {\r\n        buttonClasses.push(classes.hidden)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.TodoTool}>\r\n            <div>\r\n                {total === 0 ? (\r\n                    'Нет задач'\r\n                ) : (\r\n                    `Осталось ${total}`\r\n                )}\r\n            </div>\r\n            <div>\r\n                <input type=\"radio\" name=\"filter\" id=\"filterAll\" defaultChecked={true}/>\r\n                <label htmlFor=\"filterAll\" onClick={()=> {actions.filterTodo('all')}}>Все</label>\r\n                <input type=\"radio\" name=\"filter\" id=\"filterNoCompleted\" />\r\n                <label htmlFor=\"filterNoCompleted\" onClick={()=> {actions.filterTodo('noCompleted')}}>Не выполненные</label>\r\n                <input type=\"radio\" name=\"filter\" id=\"filterCompleted\" />\r\n                <label htmlFor=\"filterCompleted\" onClick={()=> {actions.filterTodo('completed')}}>Выполненные</label>\r\n            </div>\r\n            <div>\r\n                <button className={buttonClasses.join(' ')} onClick={()=> {\r\n                    actions.deleteComplited();\r\n                    document.getElementById('filterAll').checked = true;\r\n                }} \r\n                >Удалить выполненные</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport TodoList from \"../../components/TodoList/TodoList\";\r\nimport TodoCreator from \"../../components/TodoCreator/TodoCreator\";\r\nimport TodoItem from \"../../components/TodoItem/TodoItem\";\r\nimport TodoTool from \"../../components/TodoTool/TodoTool\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nimport {\r\n    toggleTodoComplite,\r\n    createTodo,\r\n    deleteTodo,\r\n    toggleShowTodo,\r\n    deleteComplited,\r\n    filterTodo,\r\n} from \"../../actions\";\r\n\r\nconst ItemWrap = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    flex-grow: 1;\r\n    ${this}::-webkit-scrollbar {\r\n        width: 0;\r\n    }\r\n    -moz-user-select: none;\r\n    -khtml-user-select: none;\r\n    user-select: none;\r\n    overflow-y: scroll;\r\n`;\r\n\r\nconst TitleNoObjects = styled.div`\r\n    padding: 15px 0;\r\n    color: rgba(0,0,0, .25);\r\n    font-size: 22px;\r\n    text-align: center;\r\n`;\r\n\r\nfunction Todo({\r\n    showTodos,\r\n    todos,\r\n    todosOrder,\r\n    toggleTodoComplite,\r\n    createTodo,\r\n    deleteTodo,\r\n    toggleShowTodo,\r\n    deleteComplited,\r\n    filterTodo,\r\n    filter\r\n}) {\r\n    const ItemActions = { toggleTodoComplite, deleteTodo };\r\n    const ToolActions = { deleteComplited, filterTodo };\r\n\r\n    const totalTodos = () => {\r\n        let size = 0;\r\n        Object.keys(todos).map((item) =>\r\n            todos[item].complited === false ? size++ : null\r\n        );\r\n        return size;\r\n    };\r\n\r\n    const totalNoCompleted = () => {\r\n        let size = 0;\r\n        Object.keys(todos).map(item => \r\n            todos[item].complited ? size++ : null   \r\n        );\r\n        return size;\r\n    }\r\n\r\n    const renderTodoItems = () => {\r\n        return (\r\n            <ItemWrap>\r\n                {todosOrder.map((todoId, index, arr) => {\r\n                    const currentItem = todos[todoId];\r\n                    return (\r\n                        <TodoItem\r\n                            key={index}\r\n                            index={index}\r\n                            id={currentItem.id}\r\n                            text={currentItem.text}\r\n                            complited={currentItem.complited}\r\n                            filter={filter}\r\n                            actions={ItemActions}\r\n                        />\r\n                    );\r\n                })}\r\n            </ItemWrap>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <>\r\n        <TodoList>\r\n            <TodoCreator\r\n                createTodo={createTodo}\r\n                showTodos={showTodos}\r\n                toggleShowTodo={toggleShowTodo}\r\n            />\r\n            {todosOrder.length === 0 ? <TitleNoObjects>Задач этого типа нет.</TitleNoObjects> : showTodos ? renderTodoItems() : null}\r\n            <TodoTool total={totalTodos()} totalNoCompleted={totalNoCompleted} actions={ToolActions} />\r\n        </TodoList>\r\n        </>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        showTodos: state.showTodos,\r\n        todos: state.todos,\r\n        todosOrder: state.todosOrder,\r\n        filter: state.filter\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    toggleTodoComplite,\r\n    createTodo,\r\n    deleteTodo,\r\n    toggleShowTodo,\r\n    deleteComplited,\r\n    filterTodo,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Todo);\r\n","import * as types from '../constants'\r\n\r\nexport function createTodo(text) {\r\n    return {\r\n        type: types.CREATE_TODO,\r\n        text,\r\n    }\r\n}\r\n\r\nexport function toggleTodoComplite(id) {\r\n    return {\r\n        type: types.TOGGLE_TODO_COMPLITE,\r\n        id\r\n    }\r\n}\r\n\r\nexport function deleteTodo(id) {\r\n    return {\r\n        type: types.DELETE_TODO,\r\n        id\r\n    }\r\n}\r\n\r\nexport function toggleShowTodo() {\r\n    return {\r\n        type: types.TOGGLE_TODO_SHOW,\r\n    }\r\n}\r\n\r\nexport function deleteComplited() {\r\n    return {\r\n        type: types.DELETE_COMPLETED,\r\n    }\r\n}\r\n\r\n// * FILTERS\r\n\r\nexport function filterTodo(filter) {\r\n    return {\r\n        type: types.FILTER_TODO,\r\n        filter,\r\n    }\r\n}","export const CREATE_TODO = 'CREATE_TODO';\r\nexport const TOGGLE_TODO_COMPLITE = 'TOGGLE_TODO_COMPLITE';\r\nexport const DELETE_TODO = 'DELETE_TODO';\r\nexport const TOGGLE_TODO_SHOW = 'TOGGLE_TODO_SHOW';\r\n\r\nexport const DELETE_COMPLETED = 'DELETE_COMPLETED';\r\n\r\nexport const FILTER_TODO = 'FILTER_TODO';\r\n","import React from 'react';\r\nimport classes from './Footer.module.scss'\r\n\r\nexport default function() {\r\n    return (\r\n        <div className={classes.Footer}>\r\n            <span>© Danil Samarkin - 2020</span>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Todo from '../Todo/Todo';\r\nimport Footer from '../../components/Footer/Footer'\r\n\r\nconst Title = styled.h1`\r\n  margin: 0;\r\n  text-align: center;\r\n  font-size: 90px;\r\n  color: #ffcccc;\r\n  font-weight: 400;\r\n  margin-bottom: 30px;\r\n`;\r\n\r\nconst Wrap = styled.div`\r\n  padding-top: 150px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nfunction App() {\r\n  return (\r\n    <Wrap>\r\n      <Title>todo app</Title>\r\n      <Todo />\r\n      <Footer />\r\n    </Wrap>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import * as types from '../constants'\r\n\r\nconst initialState = {\r\n    showTodos: true,\r\n    newId: 1,\r\n    todos: {},\r\n    todosOrder: [],\r\n    filter: 'all',\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    const todosKeys = Object.keys(state.todos)\r\n\r\n    switch (action.type) {\r\n\r\n        case types.CREATE_TODO: {\r\n            const newTodoName = `todo-${state.newId}`;\r\n            const {text} = action;\r\n            const newState = {\r\n                ...state,\r\n                newId: state.newId + 1,\r\n                todos: {\r\n                    ...state.todos,\r\n                    [newTodoName]: {\r\n                        id: state.newId,\r\n                        text,\r\n                        complited: false,\r\n                    }\r\n                },\r\n            }\r\n            if (state.filter === 'all' || state.filter === 'noCompleted') {\r\n                return {\r\n                    ...newState,\r\n                    todosOrder: [\r\n                        ...state.todosOrder,\r\n                        newTodoName,\r\n                    ],\r\n                }\r\n            } else {\r\n                return {\r\n                    ...newState\r\n                }\r\n            }\r\n        }\r\n\r\n        case types.TOGGLE_TODO_COMPLITE: {\r\n            const currentItem = `todo-${action.id}`;\r\n            const idx = state.todosOrder.findIndex(item => item === currentItem);\r\n            const newState = {\r\n                ...state,\r\n                    todos: {\r\n                        ...state.todos,\r\n                            [currentItem]: {\r\n                                ...state.todos[currentItem],\r\n                                complited: !state.todos[currentItem].complited \r\n                            }\r\n                    },\r\n            }\r\n            if (state.filter === 'all') {\r\n                return {\r\n                    ...newState,\r\n                }\r\n            } else { \r\n                return {\r\n                    ...newState,\r\n                    todosOrder: [\r\n                        ...state.todosOrder.slice(0, idx),\r\n                        ...state.todosOrder.slice(idx + 1),\r\n                    ]\r\n                }\r\n            }\r\n        }\r\n\r\n        case types.DELETE_TODO: {\r\n            const todoName = `todo-${action.id}`\r\n            const copyTodos = state.todos;\r\n            const indexTodo = state.todosOrder.findIndex(item => item === todoName)\r\n            delete copyTodos[todoName]\r\n\r\n            return {\r\n                ...state,\r\n                todos: {\r\n                    ...copyTodos,\r\n                },\r\n                todosOrder: [\r\n                    ...state.todosOrder.slice(0, indexTodo),\r\n                    ...state.todosOrder.slice(indexTodo + 1),\r\n                ]\r\n            }\r\n        }\r\n\r\n        case types.TOGGLE_TODO_SHOW: {\r\n            return {\r\n                ...state,\r\n                showTodos: !state.showTodos,\r\n            }\r\n        }\r\n\r\n        case types.DELETE_COMPLETED: {\r\n            const newTodos = state.todos;\r\n            todosKeys.filter(item => state.todos[item].complited === true).map(item => delete newTodos[item]);\r\n            \r\n            return {\r\n                ...state,\r\n                todos: newTodos,\r\n                todosOrder: Object.keys(newTodos),\r\n                filter: 'all',\r\n            }\r\n        }\r\n\r\n        case types.FILTER_TODO: {\r\n            switch (action.filter) {\r\n                case 'all': {\r\n                    return {\r\n                        ...state,\r\n                        todosOrder: todosKeys,\r\n                        filter: 'all',\r\n                    }\r\n                    /* falls through */\r\n                }\r\n                case 'completed': {\r\n                    return {\r\n                        ...state,\r\n                        todosOrder: todosKeys.filter(item => state.todos[item].complited === true),\r\n                        filter: 'completed'\r\n                    }\r\n                    /* falls through */\r\n                }\r\n                case 'noCompleted': {\r\n                    return {\r\n                        ...state,\r\n                        todosOrder: todosKeys.filter(item => state.todos[item].complited === false),\r\n                        filter: 'noCompleted'\r\n                    }\r\n                    /* falls through */\r\n                }\r\n                default: {\r\n                    return {\r\n                        ...state,\r\n                        todosOreder: state.todosOrder\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default reducer","import { createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport reducers from '../reducer'\r\n\r\nconst store = createStore(reducers, composeWithDevTools());\r\n\r\nexport default store;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./containers/App/App\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from './store'\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}